{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucas\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\Cryptos\\\\app-indicadores\\\\src\\\\Componentes\\\\CardMargens\\\\CardMargens.jsx\";\nimport { Component } from \"react\";\nimport { TextField, Box, Button } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class CardMargens extends Component {\n  constructor(props) {\n    super(props);\n    this.receitaLiquida = null;\n    this.receitaBruta = null;\n    this.lucroBruto = null;\n    this.lucroOperacional = null;\n    this.lucroLiquido = null;\n  }\n\n  handleSendValues() {\n    const receitaBruta = document.querySelector(\"receitaBruta\");\n    const receitaLiquida = document.querySelector(\"receitaLiquida\");\n    const lucroBruto = document.querySelector(\"lucroBruto\");\n    const lucroOperacional = document.querySelector(\"lucroOperacional\");\n    const lucroLiquido = document.querySelector(\"lucroLiquido\");\n    const analisar = {\n      receitaBruta,\n      receitaLiquida,\n      lucroBruto,\n      lucroOperacional,\n      lucroLiquido\n    };\n    fetch(\"http://localhost:5050/calcular\", {\n      method: \"POST\",\n      body: JSON.stringify(analisar)\n    }).then(resp => resp.json()).then(resp => this.props.takeResult(resp));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        border: \"1px solid #c4c4c4\",\n        width: \"300px\",\n        height: \"600px\",\n        backgroundColor: \"#f4f4f4\",\n        padding: \"0px 20px\",\n        boxSizing: \"border-box\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          height: \"500px\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"space-around\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"receitaBruta\",\n          label: \"Digite a Receita Bruta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"receitaLiquida\",\n          label: \"Digite a Receita L\\xEDquida\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"lucroBruto\",\n          label: \"Digite o Lucro Bruto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"lucroOperacional\",\n          label: \"Digite a Lucro Operacional\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"lucroLiquido\",\n          label: \"Digite a Lucro L\\xEDquido\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          sx: {\n            height: \"56px\"\n          },\n          onClick: e => this.handleSendValues(),\n          color: \"success\",\n          variant: \"outlined\",\n          children: \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/lucas/OneDrive/Área de Trabalho/Cryptos/app-indicadores/src/Componentes/CardMargens/CardMargens.jsx"],"names":["Component","TextField","Box","Button","CardMargens","constructor","props","receitaLiquida","receitaBruta","lucroBruto","lucroOperacional","lucroLiquido","handleSendValues","document","querySelector","analisar","fetch","method","body","JSON","stringify","then","resp","json","takeResult","render","border","width","height","backgroundColor","padding","boxSizing","display","flexDirection","justifyContent","e"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\r\nimport {TextField,Box, Button} from \"@material-ui/core\"\r\nexport default class CardMargens extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.receitaLiquida = null;\r\n        this.receitaBruta = null;\r\n        this.lucroBruto = null;\r\n        this.lucroOperacional = null;\r\n        this.lucroLiquido = null;\r\n\r\n\r\n    }\r\n\r\n    handleSendValues(){\r\n        const receitaBruta = document.querySelector(\"receitaBruta\");\r\n        const receitaLiquida = document.querySelector(\"receitaLiquida\");\r\n        const lucroBruto = document.querySelector(\"lucroBruto\");\r\n        const lucroOperacional = document.querySelector(\"lucroOperacional\");\r\n        const lucroLiquido = document.querySelector(\"lucroLiquido\");\r\n\r\n        const analisar = {\r\n            receitaBruta,\r\n            receitaLiquida,\r\n            lucroBruto,\r\n            lucroOperacional,\r\n            lucroLiquido\r\n        }\r\n\r\n        fetch(\"http://localhost:5050/calcular\",{\r\n            method:\"POST\",\r\n            body:JSON.stringify(analisar)\r\n        })\r\n        .then(resp => resp.json())\r\n        .then(resp => this.props.takeResult(resp));\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <Box sx={{border:\"1px solid #c4c4c4\",width:\"300px\", height:\"600px\",backgroundColor:\"#f4f4f4\", padding:\"0px 20px\", boxSizing:\"border-box\"}}>\r\n                <Box sx={{height:\"500px\", display:\"flex\", flexDirection:\"column\", justifyContent:\"space-around\"}}>\r\n                    <TextField id=\"receitaBruta\" label=\"Digite a Receita Bruta\"></TextField>\r\n                    <TextField id=\"receitaLiquida\" label=\"Digite a Receita Líquida\"></TextField>\r\n                    <TextField id=\"lucroBruto\" label=\"Digite o Lucro Bruto\"></TextField>\r\n                    <TextField id=\"lucroOperacional\" label=\"Digite a Lucro Operacional\"></TextField>\r\n                    <TextField id=\"lucroLiquido\" label=\"Digite a Lucro Líquido\"></TextField>\r\n                    <Button sx={{height:\"56px\"}} onClick={e => this.handleSendValues()} color=\"success\" variant=\"outlined\">Enviar</Button>\r\n                </Box>\r\n            </Box>\r\n\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}