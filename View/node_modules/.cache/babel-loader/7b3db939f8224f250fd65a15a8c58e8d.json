{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucas\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\Cryptos\\\\app-indicadores\\\\View\\\\src\\\\Componentes\\\\CardMargens\\\\CardMargens.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { TextField, Box, Button } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CardMargens(_ref) {\n  _s();\n\n  let {\n    takeResult,\n    validacao\n  } = _ref;\n  const [receitaBruta, setReceitaBruta] = useState(\"\");\n  const [receitaLiquida, setReceitaLiquida] = useState(\"\");\n  const [lucroBruto, setlucroBruto] = useState(\"\");\n  const [lucroOperacional, setlucroOperacional] = useState(\"\");\n  const [lucroLiquido, setlucroLiquido] = useState(\"\");\n  const [erroReceitaBruta, setErroReceitaBruta] = useState({\n    value: false,\n    message: \"\"\n  });\n  const [erroReceitaLiquida, setErroReceitaLiquida] = useState({\n    value: false,\n    message: \"\"\n  });\n  const [erroLucroBruto, setErroLucroBruto] = useState({\n    value: false,\n    message: \"\"\n  });\n  const [erroLucroOperacional, setErroLucroOperacional] = useState({\n    value: false,\n    message: \"\"\n  });\n  const [erroLucroLiquido, setErroLucroLiquido] = useState({\n    value: false,\n    message: \"\"\n  });\n\n  function handleSendValues() {\n    const data = {\n      receitaBruta,\n      receitaLiquida,\n      lucroBruto,\n      lucroOperacional,\n      lucroLiquido\n    };\n    const optionsFetch = {\n      method: \"POST\",\n      headers: {\n        'Accept': \"application/json\",\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    };\n    fetch(\"http://localhost:5050/calcular\", optionsFetch).then(resp => resp.json()).then(resp => takeResult(resp));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: \"300px\",\n      backgroundColor: \"#f4f4f4\",\n      padding: \"0px 20px\",\n      borderRadius: \"10px\",\n      boxSizing: \"border-box\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        height: \"500px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-around\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        value: receitaBruta,\n        id: \"receitaBruta\",\n        label: \"Digite a Receita Bruta\",\n        error: erroReceitaBruta.value,\n        helperText: erroReceitaBruta.message,\n        onBlur: e => {\n          const [valido, message] = validacao(e);\n          setErroReceitaBruta({\n            value: valido,\n            message: message\n          });\n        },\n        onChange: e => {\n          setReceitaBruta(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        value: receitaLiquida,\n        id: \"receitaLiquida\",\n        label: \"Digite a Receita L\\xEDquida\",\n        onChange: e => {\n          setReceitaLiquida(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        value: lucroBruto,\n        id: \"lucroBruto\",\n        label: \"Digite o Lucro Bruto\",\n        onChange: e => {\n          setlucroBruto(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        value: lucroOperacional,\n        id: \"lucroOperacional\",\n        label: \"Digite a Lucro Operacional\",\n        onChange: e => {\n          setlucroOperacional(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        value: lucroLiquido,\n        id: \"lucroLiquido\",\n        label: \"Digite a Lucro L\\xEDquido\",\n        onChange: e => {\n          setlucroLiquido(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        sx: {\n          height: \"56px\"\n        },\n        onClick: e => {\n          handleSendValues();\n          console.log(\"Enviado\");\n        },\n        color: \"success\",\n        variant: \"outlined\",\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CardMargens, \"Qi71c8nhgoIagxVRxijyh7U/jHg=\");\n\n_c = CardMargens;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardMargens\");","map":{"version":3,"sources":["C:/Users/lucas/OneDrive/√Årea de Trabalho/Cryptos/app-indicadores/View/src/Componentes/CardMargens/CardMargens.jsx"],"names":["useState","TextField","Box","Button","CardMargens","takeResult","validacao","receitaBruta","setReceitaBruta","receitaLiquida","setReceitaLiquida","lucroBruto","setlucroBruto","lucroOperacional","setlucroOperacional","lucroLiquido","setlucroLiquido","erroReceitaBruta","setErroReceitaBruta","value","message","erroReceitaLiquida","setErroReceitaLiquida","erroLucroBruto","setErroLucroBruto","erroLucroOperacional","setErroLucroOperacional","erroLucroLiquido","setErroLucroLiquido","handleSendValues","data","optionsFetch","method","headers","body","JSON","stringify","fetch","then","resp","json","width","backgroundColor","padding","borderRadius","boxSizing","height","display","flexDirection","justifyContent","e","valido","target","console","log"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport { TextField, Box, Button } from \"@material-ui/core\";\r\n\r\nexport default function CardMargens({takeResult,validacao}) {\r\n\r\n    const [receitaBruta, setReceitaBruta] = useState(\"\");\r\n    const [receitaLiquida, setReceitaLiquida] = useState(\"\");\r\n    const [lucroBruto, setlucroBruto] = useState(\"\");\r\n    const [lucroOperacional, setlucroOperacional] = useState(\"\");\r\n    const [lucroLiquido, setlucroLiquido] = useState(\"\");\r\n    const [erroReceitaBruta, setErroReceitaBruta] = useState({value:false,message:\"\"});\r\n    const [erroReceitaLiquida, setErroReceitaLiquida] = useState({value:false,message:\"\"});\r\n    const [erroLucroBruto, setErroLucroBruto] = useState({value:false,message:\"\"});\r\n    const [erroLucroOperacional, setErroLucroOperacional] = useState({value:false,message:\"\"});\r\n    const [erroLucroLiquido, setErroLucroLiquido] = useState({value:false,message:\"\"});\r\n\r\n\r\n    function handleSendValues(){\r\n\r\n        const data = {\r\n            receitaBruta,\r\n            receitaLiquida,\r\n            lucroBruto,\r\n            lucroOperacional,\r\n            lucroLiquido\r\n        }\r\n\r\n        const optionsFetch = {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Accept': \"application/json\",\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data)\r\n        }\r\n        fetch(\"http://localhost:5050/calcular\", optionsFetch)\r\n            .then(resp => resp.json())\r\n            .then(resp => takeResult(resp));\r\n\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ width: \"300px\", backgroundColor: \"#f4f4f4\", padding: \"0px 20px\", borderRadius: \"10px\", boxSizing: \"border-box\" }}>\r\n            <Box sx={{ height: \"500px\", display: \"flex\", flexDirection: \"column\", justifyContent: \"space-around\" }}>\r\n                <TextField\r\n                    value={receitaBruta}\r\n                    id=\"receitaBruta\"\r\n                    label=\"Digite a Receita Bruta\"\r\n                    error={erroReceitaBruta.value}\r\n                    helperText={erroReceitaBruta.message}\r\n                    onBlur={e =>{\r\n                        const [valido,message]= validacao(e);\r\n                        setErroReceitaBruta({\r\n                            value:valido,\r\n                            message:message\r\n                        })\r\n                    }}\r\n                    onChange={e => {\r\n                        setReceitaBruta(e.target.value)\r\n                    }}\r\n                />\r\n                <TextField\r\n                    value={receitaLiquida} \r\n                    id=\"receitaLiquida\" \r\n                    label=\"Digite a Receita L√≠quida\"\r\n                    onChange={e => {\r\n                        setReceitaLiquida(e.target.value)\r\n                    }}\r\n                />\r\n                <TextField\r\n                    value={lucroBruto} \r\n                    id=\"lucroBruto\" \r\n                    label=\"Digite o Lucro Bruto\"\r\n                    onChange={e => {\r\n                        setlucroBruto(e.target.value)\r\n                    }}\r\n                />\r\n                <TextField\r\n                    value={lucroOperacional} \r\n                    id=\"lucroOperacional\" \r\n                    label=\"Digite a Lucro Operacional\"\r\n                    onChange={e => {\r\n                        setlucroOperacional(e.target.value)\r\n                    }}\r\n                />\r\n                <TextField\r\n                    value={lucroLiquido}\r\n                    id=\"lucroLiquido\" \r\n                    label=\"Digite a Lucro L√≠quido\"\r\n                    onChange={e => {\r\n                        setlucroLiquido(e.target.value)\r\n                    }}\r\n                />\r\n                <Button \r\n                    sx={{ height: \"56px\" }} \r\n                    onClick={e => {\r\n                        handleSendValues();\r\n                        console.log(\"Enviado\");\r\n                    }}\r\n                    color=\"success\" \r\n                    variant=\"outlined\">\r\n                    Enviar\r\n                </Button>\r\n            </Box>\r\n        </Box>\r\n\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}